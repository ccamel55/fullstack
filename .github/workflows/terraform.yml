# used to provision azure so we can easily deploy our web app onto it
# make sure you manually add your registry server password which is just your github auth token with "repo" and "read:packages" enabled
name: Terraform
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:

  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}

    defaults:
          run:
            shell: bash

    steps:
      - name: 'Get latest Terraform GitHub release'
        run: "echo ::set-output name=tf_actions_version::$(curl -s https://api.github.com/repos/hashicorp/terraform/releases/latest | jq -r '.tag_name' | sed 's/^v//')"
        shell: bash
        id: get_tf_latest

      - name: Checkout
        uses: actions/checkout@v2
  
      - name: 'Terraform Format'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ steps.get_tf_latest.outputs.tf_actions_version }}
          tf_actions_subcommand: 'fmt'
          tf_actions_working_dir: "./"
          
      - name: 'Terraform Init'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ steps.get_tf_latest.outputs.tf_actions_version }}
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: "./"
  
      - name: 'Terraform Validate'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ steps.get_tf_latest.outputs.tf_actions_version }}
          tf_actions_subcommand: 'validate'
          tf_actions_working_dir: "./"
          
      - name: 'Terraform Plan'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ steps.get_tf_latest.outputs.tf_actions_version }}
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: "./"
  
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ steps.get_tf_latest.outputs.tf_actions_version }}
          tf_actions_subcommand: 'apply'
          tf_actions_working_dir: "./"